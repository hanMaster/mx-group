version: "3.9"
services:
  database:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./database/initPostgres.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD}'
    ports:
      - "5432:5432"
    healthcheck:
      test: psql -U postgres -q -d postgres -c "SELECT 'ready';"
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - app
  mariadb:
    image: 'mariadb:10'
    container_name: mariadb
    restart: unless-stopped
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "mariadb"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - 'mariadb-data:/var/lib/mysql'
      - ./database/initMariaDB.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s
    networks:
      - app

  php-fpm:
    build: ./php-fpm
    container_name: php-fpm
    depends_on:
      - database
      - mariadb
    restart: unless-stopped
    volumes:
      - ./www-html:/var/www/html
    networks:
      - app

  nginx:
    image: nginx:1.23-alpine
    container_name: nginx
    depends_on:
      - php-fpm
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./www-html:/var/www/html
      - ./nginx:/etc/nginx/conf.d
    networks:
      - app


volumes:
  db-data:
    driver: local
  mariadb-data:
    driver: local
  www-html:
    driver: local

networks:
  app:
    driver: bridge